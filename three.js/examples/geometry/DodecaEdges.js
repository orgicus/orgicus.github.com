var DodecaEdges = function () {

	var scope = this;

	THREE.Geometry.call(this);

	v( -12.271027, -27.912203, -93.417236 );
	v( -12.271027, -43.452217, -93.417236 );
	v( -4.501022, -35.682209, -93.417236 );
	v( -12.271027, -35.682209, -85.647232 );
	v( -20.041031, -35.682209, -93.417236 );
	v( -12.271027, -35.682209, -101.187241 );
	v( -12.271027, 43.452217, -93.417236 );
	v( -12.271027, 27.912203, -93.417236 );
	v( -4.501022, 35.682209, -93.417236 );
	v( -12.271027, 35.682209, -85.647232 );
	v( -20.041031, 35.682209, -93.417236 );
	v( -12.271027, 35.682209, -101.187241 );
	v( 81.146210, 7.770006, -35.682209 );
	v( 81.146210, -7.770006, -35.682209 );
	v( 88.916214, -0.000000, -35.682209 );
	v( 81.146210, -0.000000, -27.912203 );
	v( 73.376205, -0.000000, -35.682209 );
	v( 81.146210, -0.000000, -43.452217 );
	v( 81.146210, 7.770006, 35.682209 );
	v( 81.146210, -7.770006, 35.682209 );
	v( 88.916214, -0.000000, 35.682209 );
	v( 81.146210, -0.000000, 43.452217 );
	v( 73.376205, -0.000000, 35.682209 );
	v( 81.146210, -0.000000, 27.912203 );
	v( -12.271027, -27.912203, 93.417236 );
	v( -12.271027, -43.452217, 93.417236 );
	v( -4.501022, -35.682209, 93.417236 );
	v( -12.271027, -35.682209, 101.187241 );
	v( -20.041031, -35.682209, 93.417236 );
	v( -12.271027, -35.682209, 85.647232 );
	v( -12.271027, 43.452217, 93.417236 );
	v( -12.271027, 27.912203, 93.417236 );
	v( -4.501022, 35.682209, 93.417236 );
	v( -12.271027, 35.682209, 101.187241 );
	v( -20.041031, 35.682209, 93.417236 );
	v( -12.271027, 35.682209, 85.647232 );
	v( -105.688263, 7.770006, 35.682209 );
	v( -105.688263, -7.770006, 35.682209 );
	v( -97.918259, -0.000000, 35.682209 );
	v( -105.688263, -0.000000, 43.452217 );
	v( -113.458267, -0.000000, 35.682209 );
	v( -105.688263, -0.000000, 27.912203 );
	v( -105.688263, 7.770006, -35.682209 );
	v( -105.688263, -7.770006, -35.682209 );
	v( -97.918259, -0.000000, -35.682209 );
	v( -105.688263, -0.000000, -27.912203 );
	v( -113.458267, -0.000000, -35.682209 );
	v( -105.688263, -0.000000, -43.452217 );
	v( -47.953232, -85.647232, 0.000000 );
	v( -47.953232, -101.187241, 0.000000 );
	v( -40.183228, -93.417236, 0.000000 );
	v( -47.953232, -93.417236, 7.770006 );
	v( -55.723236, -93.417236, -0.000001 );
	v( -47.953232, -93.417236, -7.770006 );
	v( 23.411179, -85.647232, 0.000000 );
	v( 23.411179, -101.187241, 0.000000 );
	v( 31.181183, -93.417236, 0.000000 );
	v( 23.411179, -93.417236, 7.770006 );
	v( 15.641174, -93.417236, -0.000001 );
	v( 23.411179, -93.417236, -7.770006 );
	v( 23.411179, 101.187241, 0.000000 );
	v( 23.411179, 85.647232, 0.000000 );
	v( 31.181183, 93.417236, 0.000000 );
	v( 23.411179, 93.417236, 7.770006 );
	v( 15.641174, 93.417236, -0.000001 );
	v( 23.411179, 93.417236, -7.770006 );
	v( -47.953232, 101.187241, 0.000000 );
	v( -47.953232, 85.647232, 0.000000 );
	v( -40.183228, 93.417236, 0.000000 );
	v( -47.953232, 93.417236, 7.770006 );
	v( -55.723236, 93.417236, -0.000001 );
	v( -47.953232, 93.417236, -7.770006 );
	v( 45.463989, 65.505035, -57.735027 );
	v( 45.463989, 49.965019, -57.735027 );
	v( 53.233994, 57.735027, -57.735027 );
	v( 45.463989, 57.735027, -49.965019 );
	v( 37.693985, 57.735027, -57.735027 );
	v( 45.463989, 57.735027, -65.505035 );
	v( 45.463989, 65.505035, 57.735027 );
	v( 45.463989, 49.965019, 57.735027 );
	v( 53.233994, 57.735027, 57.735027 );
	v( 45.463989, 57.735027, 65.505035 );
	v( 37.693985, 57.735027, 57.735027 );
	v( 45.463989, 57.735027, 49.965019 );
	v( -70.006058, 65.505035, 57.735027 );
	v( -70.006058, 49.965019, 57.735027 );
	v( -62.236053, 57.735027, 57.735027 );
	v( -70.006058, 57.735027, 65.505035 );
	v( -77.776062, 57.735027, 57.735027 );
	v( -70.006058, 57.735027, 49.965019 );
	v( -70.006058, 65.505035, -57.735027 );
	v( -70.006058, 49.965019, -57.735027 );
	v( -62.236053, 57.735027, -57.735027 );
	v( -70.006058, 57.735027, -49.965019 );
	v( -77.776062, 57.735027, -57.735027 );
	v( -70.006058, 57.735027, -65.505035 );
	v( 45.463989, -49.965019, -57.735027 );
	v( 45.463989, -65.505035, -57.735027 );
	v( 53.233994, -57.735027, -57.735027 );
	v( 45.463989, -57.735027, -49.965019 );
	v( 37.693985, -57.735027, -57.735027 );
	v( 45.463989, -57.735027, -65.505035 );
	v( 45.463989, -49.965019, 57.735027 );
	v( 45.463989, -65.505035, 57.735027 );
	v( 53.233994, -57.735027, 57.735027 );
	v( 45.463989, -57.735027, 65.505035 );
	v( 37.693985, -57.735027, 57.735027 );
	v( 45.463989, -57.735027, 49.965019 );
	v( -70.006058, -49.965019, 57.735027 );
	v( -70.006058, -65.505035, 57.735027 );
	v( -62.236053, -57.735027, 57.735027 );
	v( -70.006058, -57.735027, 65.505035 );
	v( -77.776062, -57.735027, 57.735027 );
	v( -70.006058, -57.735027, 49.965019 );
	v( -70.006058, -49.965019, -57.735027 );
	v( -70.006058, -65.505035, -57.735027 );
	v( -62.236053, -57.735027, -57.735027 );
	v( -70.006058, -57.735027, -49.965019 );
	v( -77.776062, -57.735027, -57.735027 );
	v( -70.006058, -57.735027, -65.505035 );
	v( -11.151108, -36.495602, -89.450668 );
	v( -68.886139, -58.548420, -53.768463 );
	v( -14.510532, -32.444099, -92.382362 );
	v( -72.245567, -54.496918, -56.700157 );
	v( -15.630341, -36.495602, -96.698212 );
	v( -73.365372, -58.548420, -61.016006 );
	v( -12.270916, -40.547104, -93.766518 );
	v( -70.005943, -62.599922, -58.084312 );
	v( -71.125755, -54.924652, -55.152618 );
	v( -49.072929, -90.606857, 2.582411 );
	v( -75.177254, -59.240501, -56.272423 );
	v( -53.124432, -94.922707, 1.462605 );
	v( -71.125755, -62.172195, -59.631844 );
	v( -49.072929, -97.854401, -1.896818 );
	v( -67.074257, -57.856346, -58.512039 );
	v( -45.021427, -93.538551, -0.777012 );
	v( -49.072929, -94.230629, -3.917204 );
	v( 22.291481, -94.230629, -3.917204 );
	v( -49.072929, -89.970627, 0.342797 );
	v( 22.291481, -89.970627, 0.342797 );
	v( -49.072929, -94.230629, 4.602797 );
	v( 22.291481, -94.230629, 4.602797 );
	v( -49.072929, -98.490631, 0.342796 );
	v( 22.291481, -98.490631, 0.342796 );
	v( -11.151110, 34.868816, -96.698212 );
	v( 46.583908, 56.921635, -61.016006 );
	v( -14.510531, 38.920319, -93.766518 );
	v( 43.224483, 60.973137, -58.084312 );
	v( -15.630339, 34.868816, -89.450668 );
	v( 42.104675, 56.921635, -53.768463 );
	v( -12.270916, 30.817314, -92.382362 );
	v( 45.464100, 52.870132, -56.700157 );
	v( 44.344292, 60.545410, -59.631844 );
	v( 22.291481, 96.227615, -1.896818 );
	v( 40.292789, 56.229561, -58.512039 );
	v( 18.239979, 91.911766, -0.777010 );
	v( 44.344292, 53.297867, -55.152618 );
	v( 22.291481, 88.980072, 2.582411 );
	v( 48.395794, 57.613716, -56.272423 );
	v( 26.342983, 93.295921, 1.462603 );
	v( 22.291481, 92.603844, 4.602797 );
	v( -49.072929, 92.603844, 4.602797 );
	v( 22.291481, 96.863846, 0.342796 );
	v( -49.072929, 96.863846, 0.342796 );
	v( 22.291481, 92.603844, -3.917204 );
	v( -49.072929, 92.603844, -3.917204 );
	v( 22.291481, 88.343842, 0.342796 );
	v( -49.072929, 88.343842, 0.342796 );
	v( 80.026512, -2.333454, -39.318989 );
	v( 44.344292, 55.401573, -61.371807 );
	v( 76.337242, -2.803181, -34.579380 );
	v( 40.655022, 54.931847, -56.632198 );
	v( 80.026512, 0.706671, -31.359837 );
	v( 44.344292, 58.441696, -53.412655 );
	v( 83.715782, 1.176395, -36.099445 );
	v( 48.033562, 58.911423, -58.152264 );
	v( -13.390724, 34.868816, -88.814438 );
	v( -13.390724, -36.495602, -88.814438 );
	v( -17.650724, 34.868816, -93.074440 );
	v( -17.650724, -36.495602, -93.074440 );
	v( -13.390724, 34.868816, -97.334442 );
	v( -13.390724, -36.495602, -97.334442 );
	v( -9.130724, 34.868816, -93.074440 );
	v( -9.130724, -36.495602, -93.074440 );
	v( 80.026512, 0.706669, 40.004581 );
	v( 44.344292, -57.028358, 62.057400 );
	v( 76.337242, 1.176395, 35.264973 );
	v( 40.655022, -56.558632, 57.317791 );
	v( 80.026512, -2.333456, 32.045429 );
	v( 44.344292, -60.068481, 54.098248 );
	v( 83.715782, -2.803181, 36.785038 );
	v( 48.033562, -60.538208, 58.837856 );
	v( 46.583908, -58.548420, 61.701599 );
	v( -11.151110, -36.495602, 97.383804 );
	v( 45.464100, -54.496918, 57.385750 );
	v( -12.270916, -32.444099, 93.067955 );
	v( 42.104675, -58.548420, 54.454056 );
	v( -15.630339, -36.495602, 90.136261 );
	v( 43.224483, -62.599922, 58.769905 );
	v( -14.510531, -40.547104, 94.452110 );
	v( -13.390724, -36.495602, 89.500031 );
	v( -13.390724, 34.868816, 89.500031 );
	v( -17.650724, -36.495602, 93.760033 );
	v( -17.650724, 34.868816, 93.760033 );
	v( -13.390724, -36.495602, 98.020035 );
	v( -13.390724, 34.868816, 98.020035 );
	v( -9.130724, -36.495602, 93.760033 );
	v( -9.130724, 34.868816, 93.760033 );
	v( 44.344292, -62.172195, 60.317436 );
	v( 22.291481, -97.854401, 2.582411 );
	v( 40.292789, -57.856346, 59.197632 );
	v( 18.239979, -93.538551, 1.462603 );
	v( 44.344292, -54.924652, 55.838211 );
	v( 22.291481, -90.606857, -1.896818 );
	v( 48.395794, -59.240501, 56.958015 );
	v( 26.342983, -94.922707, -0.777010 );
	v( -15.630341, 34.868816, 97.383804 );
	v( -73.365372, 56.921635, 61.701599 );
	v( -12.270916, 38.920319, 94.452110 );
	v( -70.005943, 60.973137, 58.769905 );
	v( -11.151108, 34.868816, 90.136261 );
	v( -68.886139, 56.921635, 54.454056 );
	v( -14.510532, 30.817314, 93.067955 );
	v( -72.245567, 52.870132, 57.385750 );
	v( -71.125755, 53.297867, 55.838211 );
	v( -49.072929, 88.980072, -1.896818 );
	v( -75.177254, 57.613716, 56.958015 );
	v( -53.124432, 93.295921, -0.777012 );
	v( -71.125755, 60.545410, 60.317436 );
	v( -49.072929, 96.227615, 2.582411 );
	v( -67.074257, 56.229561, 59.197632 );
	v( -45.021427, 91.911766, 1.462605 );
	v( -106.807961, 0.706669, 32.045429 );
	v( -71.125755, 58.441696, 54.098248 );
	v( -110.497231, 1.176394, 36.785038 );
	v( -74.815025, 58.911423, 58.837856 );
	v( -106.807961, -2.333454, 40.004581 );
	v( -71.125755, 55.401573, 62.057400 );
	v( -103.118690, -2.803179, 35.264973 );
	v( -67.436485, 54.931847, 57.317791 );
	v( -106.807961, -2.333454, -31.359837 );
	v( -71.125755, -60.068481, -53.412655 );
	v( -110.497231, -2.803179, -36.099445 );
	v( -74.815025, -60.538208, -58.152264 );
	v( -106.807961, 0.706669, -39.318989 );
	v( -71.125755, -57.028358, -61.371807 );
	v( -103.118690, 1.176394, -34.579380 );
	v( -67.436485, -56.558632, -56.632198 );
	v( -106.807961, 3.446608, -35.339413 );
	v( -106.807961, 3.446608, 36.025005 );
	v( -111.067963, -0.813393, -35.339413 );
	v( -111.067963, -0.813393, 36.025005 );
	v( -106.807961, -5.073393, -35.339413 );
	v( -106.807961, -5.073393, 36.025005 );
	v( -102.547958, -0.813393, -35.339413 );
	v( -102.547958, -0.813393, 36.025005 );
	v( 80.026512, -5.073393, 36.025005 );
	v( 80.026512, -5.073393, -35.339413 );
	v( 75.766510, -0.813392, 36.025005 );
	v( 75.766510, -0.813392, -35.339413 );
	v( 80.026512, 3.446608, 36.025005 );
	v( 80.026512, 3.446608, -35.339413 );
	v( 84.286514, -0.813393, 36.025005 );
	v( 84.286514, -0.813393, -35.339413 );
	v( -49.072929, 88.980072, 2.582411 );
	v( -71.125755, 53.297867, -55.152618 );
	v( -53.124432, 93.295921, 1.462605 );
	v( -75.177254, 57.613716, -56.272423 );
	v( -49.072929, 96.227615, -1.896818 );
	v( -71.125755, 60.545410, -59.631844 );
	v( -45.021427, 91.911766, -0.777012 );
	v( -67.074257, 56.229561, -58.512039 );
	v( -73.365372, 56.921635, -61.016006 );
	v( -15.630341, 34.868816, -96.698212 );
	v( -70.005943, 60.973137, -58.084312 );
	v( -12.270916, 38.920319, -93.766518 );
	v( -68.886139, 56.921635, -53.768463 );
	v( -11.151108, 34.868816, -89.450668 );
	v( -72.245567, 52.870132, -56.700157 );
	v( -14.510532, 30.817314, -92.382362 );
	v( -11.151110, -36.495602, -96.698212 );
	v( 46.583908, -58.548420, -61.016006 );
	v( -12.270916, -32.444099, -92.382362 );
	v( 45.464100, -54.496918, -56.700157 );
	v( -15.630339, -36.495602, -89.450668 );
	v( 42.104675, -58.548420, -53.768463 );
	v( -14.510531, -40.547104, -93.766518 );
	v( 43.224483, -62.599922, -58.084312 );
	v( 44.344292, -57.028358, -61.371807 );
	v( 80.026512, 0.706669, -39.318989 );
	v( 40.655022, -56.558632, -56.632198 );
	v( 76.337242, 1.176395, -34.579380 );
	v( 44.344292, -60.068481, -53.412655 );
	v( 80.026512, -2.333456, -31.359837 );
	v( 48.033562, -60.538208, -58.152264 );
	v( 83.715782, -2.803181, -36.099445 );
	v( -15.630339, 34.868816, 90.136261 );
	v( 42.104675, 56.921635, 54.454056 );
	v( -14.510531, 38.920319, 94.452110 );
	v( 43.224483, 60.973137, 58.769905 );
	v( -11.151110, 34.868816, 97.383804 );
	v( 46.583908, 56.921635, 61.701599 );
	v( -12.270916, 30.817314, 93.067955 );
	v( 45.464100, 52.870132, 57.385750 );
	v( 44.344292, 55.401573, 62.057400 );
	v( 80.026512, -2.333454, 40.004581 );
	v( 40.655022, 54.931847, 57.317791 );
	v( 76.337242, -2.803181, 35.264973 );
	v( 44.344292, 58.441696, 54.098248 );
	v( 80.026512, 0.706671, 32.045429 );
	v( 48.033562, 58.911423, 58.837856 );
	v( 83.715782, 1.176395, 36.785038 );
	v( -49.072929, -90.606857, -1.896818 );
	v( -71.125755, -54.924652, 55.838211 );
	v( -53.124432, -94.922707, -0.777012 );
	v( -75.177254, -59.240501, 56.958015 );
	v( -49.072929, -97.854401, 2.582411 );
	v( -71.125755, -62.172195, 60.317436 );
	v( -45.021427, -93.538551, 1.462605 );
	v( -67.074257, -57.856346, 59.197632 );
	v( -68.886139, -58.548420, 54.454056 );
	v( -11.151108, -36.495602, 90.136261 );
	v( -72.245567, -54.496918, 57.385750 );
	v( -14.510532, -32.444099, 93.067955 );
	v( -73.365372, -58.548420, 61.701599 );
	v( -15.630341, -36.495602, 97.383804 );
	v( -70.005943, -62.599922, 58.769905 );
	v( -12.270916, -40.547104, 94.452110 );
	v( 22.291481, 96.227615, 2.582411 );
	v( 44.344292, 60.545410, 60.317436 );
	v( 18.239979, 91.911766, 1.462603 );
	v( 40.292789, 56.229561, 59.197632 );
	v( 22.291481, 88.980072, -1.896818 );
	v( 44.344292, 53.297867, 55.838211 );
	v( 26.342983, 93.295921, -0.777010 );
	v( 48.395794, 57.613716, 56.958015 );
	v( -71.125755, -60.068481, 54.098248 );
	v( -106.807961, -2.333454, 32.045429 );
	v( -74.815025, -60.538208, 58.837856 );
	v( -110.497231, -2.803179, 36.785038 );
	v( -71.125755, -57.028358, 62.057400 );
	v( -106.807961, 0.706669, 40.004581 );
	v( -67.436485, -56.558632, 57.317791 );
	v( -103.118690, 1.176394, 35.264973 );
	v( 44.344292, -54.924652, -55.152618 );
	v( 22.291481, -90.606857, 2.582411 );
	v( 40.292789, -57.856346, -58.512039 );
	v( 18.239979, -93.538551, -0.777010 );
	v( 44.344292, -62.172195, -59.631844 );
	v( 22.291481, -97.854401, -1.896818 );
	v( 48.395794, -59.240501, -56.272423 );
	v( 26.342983, -94.922707, 1.462603 );
	v( -106.807961, -2.333454, -39.318989 );
	v( -71.125755, 55.401573, -61.371807 );
	v( -110.497231, 1.176394, -36.099445 );
	v( -74.815025, 58.911423, -58.152264 );
	v( -106.807961, 0.706669, -31.359837 );
	v( -71.125755, 58.441696, -53.412655 );
	v( -103.118690, -2.803179, -34.579380 );
	v( -67.436485, 54.931847, -56.632198 );

	f4( 120, 121, 123, 122, 0.525731, -0.000000, 0.850651 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 122, 123, 125, 124, 0.525731, -0.000000, 0.850651 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 124, 125, 127, 126, -0.262866, -0.951056, 0.162460 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 126, 127, 121, 120, -0.262866, -0.951056, 0.162460 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);
	f4( 128, 129, 131, 130, -0.262866, -0.951056, 0.162460 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 130, 131, 133, 132, -0.262866, -0.951056, 0.162460 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 132, 133, 135, 134, -0.525731, 0.000000, -0.850651 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 134, 135, 129, 128, -0.525731, 0.000000, -0.850651 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);
	f4( 136, 137, 139, 138, -0.525731, 0.000000, -0.850651 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 138, 139, 141, 140, -0.525731, 0.000000, -0.850651 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 140, 141, 143, 142, 0.262866, 0.951056, -0.162460 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 142, 143, 137, 136, 0.262866, 0.951056, -0.162460 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);
	f4( 144, 145, 147, 146, 0.262866, 0.951056, -0.162460 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 146, 147, 149, 148, 0.262866, 0.951056, -0.162460 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 148, 149, 151, 150, 0.525731, -0.000000, 0.850651 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 150, 151, 145, 144, 0.525731, -0.000000, 0.850651 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);
	f4( 152, 153, 155, 154, 0.000000, -0.850651, 0.525731 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 154, 155, 157, 156, 0.000000, -0.850651, 0.525731 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 156, 157, 159, 158, -0.951056, 0.162460, 0.262866 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 158, 159, 153, 152, -0.951056, 0.162460, 0.262866 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);
	f4( 160, 161, 163, 162, -0.951056, 0.162460, 0.262866 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 162, 163, 165, 164, -0.951056, 0.162460, 0.262866 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 164, 165, 167, 166, -0.000000, 0.850651, -0.525731 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 166, 167, 161, 160, -0.000000, 0.850651, -0.525731 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);
	f4( 168, 169, 171, 170, -0.000000, 0.850651, -0.525731 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 170, 171, 173, 172, -0.000000, 0.850651, -0.525731 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 172, 173, 175, 174, 0.951056, -0.162460, -0.262866 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 174, 175, 169, 168, 0.951056, -0.162460, -0.262866 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);
	f4( 176, 177, 179, 178, 0.951056, -0.162460, -0.262866 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 178, 179, 181, 180, 0.951056, -0.162460, -0.262866 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 180, 181, 183, 182, 0.000000, -0.850651, 0.525731 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 182, 183, 177, 176, 0.000000, -0.850651, 0.525731 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);
	f4( 184, 185, 187, 186, 0.000000, 0.000000, -1.000000 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 186, 187, 189, 188, 0.000000, 0.000000, -1.000000 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 188, 189, 191, 190, 0.000000, -1.000000, 0.000000 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 190, 191, 185, 184, 0.000000, -1.000000, 0.000000 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);
	f4( 192, 193, 195, 194, 0.000000, -1.000000, 0.000000 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 194, 195, 197, 196, 0.000000, -1.000000, 0.000000 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 196, 197, 199, 198, 0.000000, 0.000000, 1.000000 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 198, 199, 193, 192, 0.000000, 0.000000, 1.000000 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);
	f4( 200, 201, 203, 202, 0.000000, 0.000000, 1.000000 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 202, 203, 205, 204, 0.000000, 0.000000, 1.000000 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 204, 205, 207, 206, 0.000000, 1.000000, 0.000000 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 206, 207, 201, 200, 0.000000, 1.000000, 0.000000 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);
	f4( 208, 209, 211, 210, 0.000000, 1.000000, 0.000000 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 210, 211, 213, 212, 0.000000, 1.000000, 0.000000 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 212, 213, 215, 214, 0.000000, 0.000000, -1.000000 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 214, 215, 209, 208, 0.000000, 0.000000, -1.000000 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);
	f4( 216, 217, 219, 218, 0.525731, -0.000000, -0.850651 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 218, 219, 221, 220, 0.525731, -0.000000, -0.850651 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 220, 221, 223, 222, -0.262866, -0.951056, -0.162460 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 222, 223, 217, 216, -0.262866, -0.951056, -0.162460 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);
	f4( 224, 225, 227, 226, -0.262866, -0.951056, -0.162460 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 226, 227, 229, 228, -0.262866, -0.951056, -0.162460 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 228, 229, 231, 230, -0.525731, 0.000000, 0.850651 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 230, 231, 225, 224, -0.525731, 0.000000, 0.850651 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);
	f4( 232, 233, 235, 234, -0.525731, 0.000000, 0.850651 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 234, 235, 237, 236, -0.525731, 0.000000, 0.850651 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 236, 237, 239, 238, 0.262866, 0.951056, 0.162460 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 238, 239, 233, 232, 0.262866, 0.951056, 0.162460 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);
	f4( 240, 241, 243, 242, 0.262866, 0.951056, 0.162460 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 242, 243, 245, 244, 0.262866, 0.951056, 0.162460 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 244, 245, 247, 246, 0.525731, -0.000000, -0.850651 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 246, 247, 241, 240, 0.525731, -0.000000, -0.850651 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);
	f4( 248, 249, 251, 250, 0.000000, -0.850651, -0.525731 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 250, 251, 253, 252, 0.000000, -0.850651, -0.525731 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 252, 253, 255, 254, -0.951057, 0.162460, -0.262865 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 254, 255, 249, 248, -0.951057, 0.162460, -0.262865 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);
	f4( 256, 257, 259, 258, -0.951057, 0.162460, -0.262865 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 258, 259, 261, 260, -0.951057, 0.162460, -0.262865 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 260, 261, 263, 262, -0.000000, 0.850651, 0.525731 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 262, 263, 257, 256, -0.000000, 0.850651, 0.525731 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);
	f4( 264, 265, 267, 266, -0.000000, 0.850651, 0.525731 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 266, 267, 269, 268, -0.000000, 0.850651, 0.525731 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 268, 269, 271, 270, 0.951056, -0.162460, 0.262866 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 270, 271, 265, 264, 0.951056, -0.162460, 0.262866 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);
	f4( 272, 273, 275, 274, 0.951056, -0.162460, 0.262866 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 274, 275, 277, 276, 0.951056, -0.162460, 0.262866 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 276, 277, 279, 278, 0.000000, -0.850651, -0.525731 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 278, 279, 273, 272, 0.000000, -0.850651, -0.525731 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);
	f4( 280, 281, 283, 282, 0.000000, 0.000000, 1.000000 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 282, 283, 285, 284, 0.000000, 0.000000, 1.000000 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 284, 285, 287, 286, 0.000000, -1.000000, 0.000000 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 286, 287, 281, 280, 0.000000, -1.000000, 0.000000 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);
	f4( 288, 289, 291, 290, 0.000000, -1.000000, 0.000000 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 290, 291, 293, 292, 0.000000, -1.000000, 0.000000 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 292, 293, 295, 294, 0.000000, 0.000000, -1.000000 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 294, 295, 289, 288, 0.000000, 0.000000, -1.000000 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);
	f4( 296, 297, 299, 298, 0.000000, 0.000000, -1.000000 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 298, 299, 301, 300, 0.000000, 0.000000, -1.000000 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 300, 301, 303, 302, 0.000000, 1.000000, 0.000000 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 302, 303, 297, 296, 0.000000, 1.000000, 0.000000 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);
	f4( 304, 305, 307, 306, 0.000000, 1.000000, 0.000000 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 306, 307, 309, 308, 0.000000, 1.000000, 0.000000 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 308, 309, 311, 310, 0.000000, 0.000000, 1.000000 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 310, 311, 305, 304, 0.000000, 0.000000, 1.000000 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);
	f4( 312, 313, 315, 314, -0.000000, 0.356822, -0.934172 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 314, 315, 317, 316, -0.000000, 0.356822, -0.934172 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 316, 317, 319, 318, -0.866025, 0.467086, 0.178411 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 318, 319, 313, 312, -0.866025, 0.467086, 0.178411 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);
	f4( 320, 321, 323, 322, -0.866025, 0.467086, 0.178411 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 322, 323, 325, 324, -0.866025, 0.467086, 0.178411 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 324, 325, 327, 326, 0.000000, -0.356822, 0.934172 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 326, 327, 321, 320, 0.000000, -0.356822, 0.934172 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);
	f4( 328, 329, 331, 330, 0.000000, -0.356822, 0.934172 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 330, 331, 333, 332, 0.000000, -0.356822, 0.934172 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 332, 333, 335, 334, 0.866025, -0.467086, -0.178411 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 334, 335, 329, 328, 0.866025, -0.467086, -0.178411 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);
	f4( 336, 337, 339, 338, 0.866025, -0.467086, -0.178411 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 338, 339, 341, 340, 0.866025, -0.467086, -0.178411 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 340, 341, 343, 342, -0.000000, 0.356822, -0.934172 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 342, 343, 337, 336, -0.000000, 0.356822, -0.934172 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);
	f4( 344, 345, 347, 346, 0.000000, 0.000000, 1.000000 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 346, 347, 349, 348, 0.000000, 0.000000, 1.000000 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 348, 349, 351, 350, -1.000000, 0.000000, 0.000000 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 350, 351, 345, 344, -1.000000, 0.000000, 0.000000 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);
	f4( 352, 353, 355, 354, -1.000000, 0.000000, 0.000000 );
	uv( 0.000000, 1.000000, 0.000000, 0.000000, 0.250000, 0.000000, 0.250000, 1.000000);
	f4( 354, 355, 357, 356, -1.000000, 0.000000, 0.000000 );
	uv( 0.250000, 1.000000, 0.250000, 0.000000, 0.500000, 0.000000, 0.500000, 1.000000);
	f4( 356, 357, 359, 358, 0.000000, 0.000000, -1.000000 );
	uv( 0.500000, 1.000000, 0.500000, 0.000000, 0.750000, 0.000000, 0.750000, 1.000000);
	f4( 358, 359, 353, 352, 0.000000, 0.000000, -1.000000 );
	uv( 0.750000, 1.000000, 0.750000, 0.000000, 1.000000, 0.000000, 1.000000, 1.000000);

	this.computeCentroids();
	this.computeNormals(true);

	scope.colors = {};
	scope.selections = {};
	scope.selections["edges"] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119];

	scope.autoColor = function(){
		for(var s in this.selections){
			for(var i = 0 ; i < this.selections[s].length; i++) this.faces[this.selections[s][i]].material = [new THREE.MeshBasicMaterial({color:this.colors[s]})];
		}
	}

	scope.getPosition = function(){	return new THREE.Vector3(0.0, 0.0, 0.0);	}

	scope.getRotation = function(){	return new THREE.Vector3(0.0, 0.0, 0.0);	}

	scope.getScale = function(){	return new THREE.Vector3(1.0, 1.0, 1.0);	}

	function v( x, y, z ) {

		scope.vertices.push( new THREE.Vertex( new THREE.Vector3( x, y, z ) ) );

	}

	function f3( a, b, c, nx, ny, nz ) {

		scope.faces.push( new THREE.Face3( a, b, c, nx && ny && nz ? new THREE.Vector3( nx, ny, nz ) : null ) );

	}

	function f4( a, b, c, d, nx, ny, nz ) {

		scope.faces.push( new THREE.Face4( a, b, c, d, nx && ny && nz ? new THREE.Vector3( nx, ny, nz ) : null ) );

	}

	function uv( u1, v1, u2, v2, u3, v3, u4, v4 ) {

		var uv = [];
		uv.push( new THREE.UV( u1, v1 ) );
		uv.push( new THREE.UV( u2, v2 ) );
		uv.push( new THREE.UV( u3, v3 ) );
		if ( u4 && v4 ) uv.push( new THREE.UV( u4, v4 ) );
		scope.uvs.push( uv );
	}

}

DodecaEdges.prototype = new THREE.Geometry();
DodecaEdges.prototype.constructor = DodecaEdges;